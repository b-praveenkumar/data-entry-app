{"ast":null,"code":"var _jsxFileName = \"/Users/praveenkumar/Documents/Data_Entry_Project/data-entry-app/src/FetchDataPage.js\",\n  _s = $RefreshSig$();\n// Import React and CSS file for styling\nimport React, { useState } from 'react';\nimport './FormStyles.css'; // Reuse the same CSS file for consistent styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [fetchedData, setFetchedData] = useState('');\n  const handleFetchData = async () => {\n    try {\n      const response = await fetch(`/api/entries?name=${name}`);\n      const result = await response.json();\n      if (result) {\n        setFetchedData(`Name: ${result.name}, Number: ${result.number}, Email: ${result.email}`);\n      } else {\n        setFetchedData('No data available');\n      }\n      console.log(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fetch-data-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fetched Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \" \", fetchedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchDataPage, \"4khkelNEDz0WK+lM7r2FLY531IM=\");\n_c = FetchDataPage;\nexport default FetchDataPage;\nvar _c;\n$RefreshReg$(_c, \"FetchDataPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FetchDataPage","_s","name","setName","fetchedData","setFetchedData","handleFetchData","response","fetch","result","json","number","email","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/praveenkumar/Documents/Data_Entry_Project/data-entry-app/src/FetchDataPage.js"],"sourcesContent":["// Import React and CSS file for styling\nimport React, { useState } from 'react';\nimport './FormStyles.css'; // Reuse the same CSS file for consistent styling\n\nconst FetchDataPage = () => {\n  const [name, setName] = useState('');\n  const [fetchedData, setFetchedData] = useState('');\n\n  const handleFetchData = async () => {\n    try {\n      const response = await fetch(`/api/entries?name=${name}`);\n      const result = await response.json();\n\n      if (result) {\n        setFetchedData(`Name: ${result.name}, Number: ${result.number}, Email: ${result.email}`);\n      } else {\n        setFetchedData('No data available');\n      }\n\n      console.log(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <div className=\"fetch-data-page\">\n      <h2>Fetch Data</h2>\n      <label htmlFor=\"name\">Name:</label>\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n      <br />\n      <button onClick={handleFetchData}>Submit</button>\n      <div>\n        <strong>Fetched Data:</strong> {fetchedData}\n      </div>\n    </div>\n  );\n};\n\nexport default FetchDataPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qBAAoBN,IAAK,EAAC,CAAC;MACzD,MAAMO,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,EAAE;QACVJ,cAAc,CAAE,SAAQI,MAAM,CAACP,IAAK,aAAYO,MAAM,CAACE,MAAO,YAAWF,MAAM,CAACG,KAAM,EAAC,CAAC;MAC1F,CAAC,MAAM;QACLP,cAAc,CAAC,mBAAmB,CAAC;MACrC;MAEAQ,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAOuB,OAAO,EAAC,MAAM;MAAAL,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnCtB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEtB,IAAK;MAACuB,QAAQ,EAAGC,CAAC,IAAKvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNtB,OAAA;MAAQ6B,OAAO,EAAEtB,eAAgB;MAAAW,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAQ;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACjB,WAAW;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}