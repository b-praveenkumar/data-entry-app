{"ast":null,"code":"var _jsxFileName = \"/Users/praveenkumar/Documents/Data_Entry_Project/data-entry-app/src/DataEntryForm.js\",\n  _s = $RefreshSig$();\n// Import React and CSS file for styling\nimport React, { useState } from 'react';\nimport './FormStyles.css'; // Create a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataEntryForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!formData.name || !formData.phone || !formData.email) {\n        console.error('Name, phone, and email are required');\n        return;\n      }\n      const response = await fetch('/api/entries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      console.log(result);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"data-entry-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: formData.name,\n      onChange: e => setFormData({\n        ...formData,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"phone\",\n      children: \"Phone:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"phone\",\n      name: \"phone\",\n      value: formData.phone,\n      onChange: e => setFormData({\n        ...formData,\n        phone: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DataEntryForm, \"FHzQte0WLFcPqUNlcFYuatlq8EM=\");\n_c = DataEntryForm;\nexport default DataEntryForm;\nvar _c;\n$RefreshReg$(_c, \"DataEntryForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataEntryForm","_s","formData","setFormData","name","phone","email","handleSubmit","e","preventDefault","console","error","response","fetch","method","headers","body","JSON","stringify","result","json","log","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/praveenkumar/Documents/Data_Entry_Project/data-entry-app/src/DataEntryForm.js"],"sourcesContent":["// Import React and CSS file for styling\nimport React, { useState } from 'react';\nimport './FormStyles.css'; // Create a CSS file for styling\n\nconst DataEntryForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (!formData.name || !formData.phone || !formData.email) {\n        console.error('Name, phone, and email are required');\n        return;\n      }\n\n      const response = await fetch('/api/entries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n      console.log(result);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"data-entry-form\">\n      <label htmlFor=\"name\">Name:</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        value={formData.name}\n        onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n      />\n\n      <label htmlFor=\"phone\">Phone:</label>\n      <input\n        type=\"text\"\n        id=\"phone\"\n        name=\"phone\"\n        value={formData.phone}\n        onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n      />\n\n      <label htmlFor=\"email\">Email:</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        name=\"email\"\n        value={formData.email}\n        onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n      />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default DataEntryForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}