{"ast":null,"code":"var _jsxFileName = \"/Users/praveenkumar/Documents/Data_Entry_Project/data-entry-app/src/FetchDataPage.js\",\n  _s = $RefreshSig$();\n// FetchDataPage.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchDataPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [fetchedData, setFetchedData] = useState('');\n\n  // Example frontend code for fetching data\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/entries');\n      console.log('Fetched data:', response.data);\n      // Handle the data as needed\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      // Handle errors if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fetched Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \" \", fetchedData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchDataPage, \"4khkelNEDz0WK+lM7r2FLY531IM=\");\n_c = FetchDataPage;\nexport default FetchDataPage;\nvar _c;\n$RefreshReg$(_c, \"FetchDataPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FetchDataPage","_s","name","setName","fetchedData","setFetchedData","fetchData","response","axios","get","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","handleFetchData","_c","$RefreshReg$"],"sources":["/Users/praveenkumar/Documents/Data_Entry_Project/data-entry-app/src/FetchDataPage.js"],"sourcesContent":["// FetchDataPage.js\n\nimport React, { useState } from 'react';\n\nconst FetchDataPage = () => {\n  const [name, setName] = useState('');\n  const [fetchedData, setFetchedData] = useState('');\n\n // Example frontend code for fetching data\nconst fetchData = async () => {\n  try {\n    const response = await axios.get('/api/entries');\n    console.log('Fetched data:', response.data);\n    // Handle the data as needed\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    // Handle errors if needed\n  }\n};\n\n\n  return (\n    <div>\n      <h2>Fetch Data</h2>\n      <label>Name:</label>\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n      <br />\n      <button onClick={handleFetchData}>Submit</button>\n      <div>\n        <strong>Fetched Data:</strong> {fetchedData}\n      </div>\n    </div>\n  );\n};\n\nexport default FetchDataPage;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEnD;EACD,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,cAAc,CAAC;MAChDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF,CAAC;EAGC,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnB,OAAA;MAAAe,QAAA,EAAO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAElB,IAAK;MAACmB,QAAQ,EAAGC,CAAC,IAAKnB,OAAO,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNnB,OAAA;MAAQyB,OAAO,EAAEC,eAAgB;MAAAX,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDnB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAQ;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACd,WAAW;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7BID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}